/*
 *  Version 1.1
 *  15-Apr-19
 *  Copyright 2018 notnatural, LLC.
 *  MIT License
 */
var Airpuck={Table:class{constructor(e,t){this.name="",this.baseID="",this.apiKey="",this.fields=[],this.records=[],this.endpoint="",this.currentRecord="",e&&(e.constructor===String?this.name=e:e.constructor===Object&&(e.name&&(this.name=e.name),e.baseID&&(this.baseID=e.baseID),e.apiKey&&(this.apiKey=e.apiKey),e.skipInit||Airpuck.initTable(this,function(){Airpuck.then(t)})))}init(e){Airpuck.initTable(this,function(){Airpuck.then(e)})}makeRecord(e){let t=Airpuck.makeRecord(this);return Airpuck.then(e),t}read(e){Airpuck.read(this,e)}add(e,t){Airpuck.add(this,e,t)}update(e,t,r){Airpuck.update(this,e,t,r)}replace(e,t,r){Airpuck.replace(this,e,t,r)}remove(e,t){Airpuck.remove(this,e,t)}updateLocalRecord(e,t){this.currentRecord&&(this.currentRecord=""),Airpuck.updateLocalRecord(this,e,t)}getLocalRecordByIndex(e){return Airpuck.getLocalRecord.byIndex(this,e)}getLocalRecordById(e){return Airpuck.getLocalRecord.byId(this,e)}getLocalRecordByField(e,t){return Airpuck.getLocalRecord.byField(this,e,t)}getLocalRecordListbyField(e,t,r){return Airpuck.getLocalRecord.ListbyField(this,e,t,r)}getRemoteRecordByRecord(e,t){this.currentRecord&&(this.currentRecord=""),Airpuck.getRemoteRecord.byRecord(this,e,t)}getRemoteRecordByIndex(e,t){this.currentRecord&&(this.currentRecord=""),Airpuck.getRemoteRecord.byIndex(this,e,t)}getRemoteRecordById(e,t){this.currentRecord&&(this.currentRecord=""),Airpuck.getRemoteRecord.byId(this,e,t)}getRemoteRecordByField(e,t,r){this.currentRecord&&(this.currentRecord=""),Airpuck.getRemoteRecord.byField(this,e,t,r)}sortedByDate(){let e=[];return this.records.forEach(function(t){e.push(t)}),e.sort(function(e,t){return new Date(t.createdTime)-new Date(e.createdTime)}),e}sortedByField(e){let t=[];return this.records.forEach(function(e){t.push(e)}),t.sort(function(t,r){var o=t.fields[e],n=r.fields[e];return(o=(o=o.toString()).toLowerCase())<(n=(n=n.toString()).toLowerCase())?-1:o>n?1:0}),t}createAttachment(e,t){return Airpuck.createAttachment(e,t)}},then:function(e){e&&e()},initTable:function(e,t){e.endpoint=Airpuck.getEndpoint(e),Airpuck.read(e,function(){e.records=e.sortedByDate(),Airpuck.getFields(e,function(){Airpuck.then(t)})})},getEndpoint:function(e){return"https://api.airtable.com/v0/"+e.baseID+"/"+e.name},getFields:function(e,t){var r=new XMLHttpRequest;r.open("GET",e.endpoint+"?maxRecords=1"),r.setRequestHeader("Authorization","Bearer "+e.apiKey),r.onload=function(){if(200===r.status){let o=JSON.parse(r.response).records;if(o.length>0){let t=Object.keys(o[0].fields);e.fields=t}Airpuck.then(t)}else console.log("Could not retrieve fields."),console.log(r.status)},r.send()},formatRecordForPost:function(e){var t={fields:{}},r=Object.keys(e);for(var o in r){var n=r[o];t.fields[n]=e[n]}return t},makeRecord:function(e){var t={},r=e.fields;for(var o in r){t[r[o]]=""}return t},read:function(e,t){var r=new XMLHttpRequest;r.open("GET",e.endpoint),r.setRequestHeader("Content-Type","application/json"),r.setRequestHeader("Authorization","Bearer "+e.apiKey),r.onload=function(){200===r.status?(e.records=JSON.parse(r.response).records,Airpuck.then(t)):(console.log("read() error."),console.log(r.status))},r.send()},add:function(e,t,r){var o=Airpuck.formatRecordForPost(t),n=new XMLHttpRequest;n.open("POST",e.endpoint),n.setRequestHeader("Content-Type","application/json"),n.setRequestHeader("Authorization","Bearer "+e.apiKey),n.onload=function(){200===n.status?Airpuck.getRemoteRecord.byRecord(e,JSON.parse(n.response),function(){e.records.push(e.currentRecord),Airpuck.then(r)}):200!==n.status&&(console.log("add() error."),console.log(n.status))},n.send(JSON.stringify(o))},update:function(e,t,r,o){var n=Airpuck.formatRecordForPost(r),i=new XMLHttpRequest;i.open("PATCH",e.endpoint+"/"+t.id),i.setRequestHeader("Content-Type","application/json"),i.setRequestHeader("Authorization","Bearer "+e.apiKey),i.onload=function(){200===i.status?Airpuck.updateLocalRecord(e,JSON.parse(i.response),o):200!==i.status&&(console.log("update() error."),console.log(i.status))},i.send(JSON.stringify(n))},updateLocalRecord:function(e,t,r){Airpuck.getRemoteRecord.byRecord(e,t,function(){e.records.forEach(function(t,r){t.id==e.currentRecord.id&&(e.records[r]=e.currentRecord)}),Airpuck.then(r)})},replace:function(e,t,r,o){var n=Airpuck.formatRecordForPost(r),i=new XMLHttpRequest;i.open("PUT",e.endpoint+"/"+t.id),i.setRequestHeader("Content-Type","application/json"),i.setRequestHeader("Authorization","Bearer "+e.apiKey),i.onload=function(){200===i.status?Airpuck.updateLocalRecord(e,t,o):200!==i.status&&(console.log("replace() error."),console.log(i.status))},i.send(JSON.stringify(n))},remove:function(e,t,r){var o=Airpuck.formatRecordForPost(t),n=new XMLHttpRequest;n.open("DELETE",e.endpoint+"/"+t.id),n.setRequestHeader("Content-Type","application/json"),n.setRequestHeader("Authorization","Bearer "+e.apiKey),n.onload=function(){200===n.status?(e.records.forEach(function(t,r){t.id==JSON.parse(n.response).id&&e.records.splice(r,1)}),Airpuck.then(r)):200!==n.status&&(console.log("remove() error."),console.log(n.status))},n.send(JSON.stringify(o))},getLocalRecord:{byIndex:function(e,t){return e.records[t]},byId:function(e,t){var r,o=e.records;for(var n in o){var i=o[n];i.id==t&&(r=i)}return r},byField:function(e,t,r){var o,n=e.records;for(var i in n){var c=n[i];c.fields[t]==r&&(o=c)}return o},ListbyField:function(e,t,r,o){var n=e.records,i=[];for(var c in n){var s=n[c];"Search"===o?s.fields[t]==r&&i.push(s):"Filter"===o&&s.fields[t].toUpperCase().includes(r.toUpperCase())&&i.push(s)}return i}},getRemoteRecord:{byRecord:function(e,t,r){var o=t.id;Airpuck.readRecordByID(e,o,r)},byIndex:function(e,t,r){var o=Airpuck.getLocalRecord.byIndex(e,t).id;Airpuck.readRecordByID(e,o,r)},byId:function(e,t,r){Airpuck.readRecordByID(e,t,r)},byField:function(e,t,r,o){var n=Airpuck.getLocalRecord.byField(e,t,r).id;Airpuck.readRecordByID(e,n,o)}},readRecordByID:function(e,t,r){var o=new XMLHttpRequest;o.open("GET",e.endpoint+"/"+t),o.setRequestHeader("Content-Type","application/json"),o.setRequestHeader("Authorization","Bearer "+e.apiKey),o.onload=function(){200===o.status?(e.currentRecord=JSON.parse(o.response),Airpuck.then(r)):(console.log("getRemoteRecord error."),console.log(o.status))},o.send()},createAttachment:function(e,t){return{url:e,filename:t}}};
